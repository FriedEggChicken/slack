{"version":3,"file":"256.js","mappings":"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","sources":["webpack://sleact-ts-front/./pages/Channel/styles.tsx","webpack://sleact-ts-front/./pages/Channel/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  height: calc(100vh - 38px);\r\n  flex-flow: column;\r\n  position: relative;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 64px;\r\n  display: flex;\r\n  width: 100%;\r\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n  box-shadow: 0 1px 0 var(--saf-0);\r\n  padding: 20px 16px 20px 20px;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  \r\n  & .header-right {\r\n    display: flex;\r\n    flex: 1;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n`;\r\n\r\nexport const DragOver = styled.div`\r\n  position: absolute;\r\n  top: 64px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: calc(100% - 64px);\r\n  background: white;\r\n  opacity: 0.7;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 40px;\r\n`;\r\n","import ChatBox from '@components/ChatBox';\r\nimport ChatList from '@components/ChatList';\r\nimport InviteChannelModal from '@components/InviteChannelModal';\r\nimport useInput from '@hooks/useInput';\r\nimport useSocket from '@hooks/useSocket';\r\nimport { Container, Header, DragOver } from '@pages/Channel/styles';\r\nimport { IChannel, IChat, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport makeSection from '@utils/makeSection';\r\nimport axios from 'axios';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport useSWR from 'swr';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport useSWRInfinite from 'swr/infinite';\r\nimport Workspace from '@layouts/Workspace';\r\n\r\nconst Channel = () => {\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const { data: myData } = useSWR('/api/users', fetcher);\r\n  const [chat, onChangeChat, setChat] = useInput('');\r\n  const { data: channelData } = useSWR<IChannel>(`/api/workspaces/${workspace}/channels/${channel}`, fetcher);\r\n  const {\r\n    data: chatData,\r\n    mutate: mutateChat,\r\n    setSize,\r\n  } = useSWRInfinite<IChat[]>(\r\n    (index) => `/api/workspaces/${workspace}/channels/${channel}/chats?perPage=20&page=${index + 1}`,\r\n    fetcher,\r\n  );\r\n  const { data: channelMembersData } = useSWR<IUser[]>(\r\n    myData ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\r\n    fetcher,\r\n  );\r\n  const [socket] = useSocket(workspace);\r\n  const isEmpty = chatData?.[0]?.length === 0;\r\n  const isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < 20) || false;\r\n  const scrollbarRef = useRef<Scrollbars>(null);\r\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\r\n  const [dragOver, setDragOver] = useState(false);\r\n\r\n  // 0초 A: 안녕~(optimistic UI)\r\n  // 1초 B: 안녕~\r\n  // 2초 A: 안녕~(실제 서버)\r\n\r\n  const onSubmitForm = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      console.log(chat);\r\n      if (chat?.trim() && chatData && channelData) {\r\n        const savedChat = chat;\r\n        mutateChat((prevChatData) => {\r\n          prevChatData?.[0].unshift({\r\n            id: (chatData[0][0]?.id || 0) + 1,\r\n            content: savedChat,\r\n            UserId: myData.id,\r\n            User: myData,\r\n            ChannelId: channelData.id,\r\n            Channel: channelData,\r\n            createdAt: new Date(),\r\n          });\r\n          return prevChatData;\r\n        }, false).then(() => {\r\n          setChat('');\r\n          scrollbarRef.current?.scrollToBottom();\r\n        });\r\n        axios\r\n          .post(`/api/workspaces/${workspace}/channels/${channel}/chats`, {\r\n            content: chat,\r\n          })\r\n          .then(() => {\r\n            mutateChat();\r\n          })\r\n          .catch(console.error);\r\n      }\r\n    },\r\n    [chat, chatData, myData, channelData, workspace, channel],\r\n  );\r\n\r\n  const onMessage = useCallback(\r\n    (data: IChat) => {\r\n      // id는 상대방 아이디\r\n      if (data.Channel.name === channel && (data.content.startsWith('uploads\\\\') || data.UserId !== myData?.id)) {\r\n        mutateChat((chatData) => {\r\n          chatData?.[0].unshift(data);\r\n          return chatData;\r\n        }, false).then(() => {\r\n          if (scrollbarRef.current) {\r\n            if (\r\n              scrollbarRef.current.getScrollHeight() <\r\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\r\n            ) {\r\n              console.log('scrollToBottom!', scrollbarRef.current?.getValues());\r\n              setTimeout(() => {\r\n                scrollbarRef.current?.scrollToBottom();\r\n              }, 50);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    },\r\n    [channel, myData],\r\n  );\r\n\r\n  useEffect(() => {\r\n    socket?.on('message', onMessage);\r\n    return () => {\r\n      socket?.off('message', onMessage);\r\n    };\r\n  }, [socket, onMessage]);\r\n\r\n  // 로딩 시 스크롤바 제일 아래로\r\n  useEffect(() => {\r\n    if (chatData?.length === 1) {\r\n      console.log('toBottomWhenLoaded', scrollbarRef.current);\r\n      setTimeout(() => {\r\n        console.log('scrollbar', scrollbarRef.current);\r\n        scrollbarRef.current?.scrollToBottom();\r\n      }, 500);\r\n    }\r\n  }, [chatData]);\r\n\r\n  const onClickInviteChannel = useCallback(() => {\r\n    setShowInviteChannelModal(true);\r\n  }, []);\r\n\r\n  const onCloseModal = useCallback(() => {\r\n    setShowInviteChannelModal(false);\r\n  }, []);\r\n\r\n  const onChangeFile = useCallback((e) => {\r\n    const formData = new FormData();\r\n    if (e.target.files) {\r\n      // Use DataTransferItemList interface to access the file(s)\r\n      for (let i = 0; i < e.target.files.length; i++) {\r\n        const file = e.target.files[i].getAsFile();\r\n        console.log('... file[' + i + '].name = ' + file.name);\r\n        formData.append('image', file);\r\n      }\r\n    }\r\n    axios.post(`/api/workspaces/${workspace}/channels/${channel}/images`, formData).then(() => {});\r\n  }, []);\r\n\r\n  const onDrop = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      console.log(e);\r\n      const formData = new FormData();\r\n      if (e.dataTransfer.items) {\r\n        // Use DataTransferItemList interface to access the file(s)\r\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\r\n          // If dropped items aren't files, reject them\r\n          if (e.dataTransfer.items[i].kind === 'file') {\r\n            const file = e.dataTransfer.items[i].getAsFile();\r\n            console.log(e, '.... file[' + i + '].name = ' + file.name);\r\n            formData.append('image', file);\r\n          }\r\n        }\r\n      } else {\r\n        // Use DataTransfer interface to access the file(s)\r\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\r\n          console.log(e, '... file[' + i + '].name = ' + e.dataTransfer.files[i].name);\r\n          formData.append('image', e.dataTransfer.files[i]);\r\n        }\r\n      }\r\n      axios.post(`/api/workspaces/${workspace}/channels/${channel}/images`, formData).then(() => {\r\n        setDragOver(false);\r\n      });\r\n    },\r\n    [workspace, channel],\r\n  );\r\n\r\n  const onDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    setDragOver(true);\r\n  }, []);\r\n\r\n  if (!myData) {\r\n    return null;\r\n  }\r\n\r\n  const chatSections = makeSection(chatData ? chatData.flat().reverse() : []);\r\n\r\n  return (\r\n    <Workspace>\r\n      <Container onDrop={onDrop} onDragOver={onDragOver}>\r\n        <Header>\r\n          <span>#{channel}</span>\r\n          <div className=\"header-right\">\r\n            <span>{channelMembersData?.length}</span>\r\n            <button\r\n              onClick={onClickInviteChannel}\r\n              className=\"c-button-unstyled p-ia__view_header__button\"\r\n              aria-label=\"Add people to #react-native\"\r\n              data-sk=\"tooltip_parent\"\r\n              type=\"button\"\r\n            >\r\n              <i className=\"c-icon p-ia__view_header__button_icon c-icon--add-user\" aria-hidden=\"true\" />\r\n            </button>\r\n          </div>\r\n        </Header>\r\n        <ChatList chatSections={chatSections} ref={scrollbarRef} setSize={setSize} isReachingEnd={isReachingEnd} />\r\n        <ChatBox chat={chat} onChangeChat={onChangeChat} onSubmitForm={onSubmitForm} />\r\n        <InviteChannelModal\r\n          show={showInviteChannelModal}\r\n          onCloseModal={onCloseModal}\r\n          setShowInviteChannelModal={setShowInviteChannelModal}\r\n        />\r\n        {dragOver && <DragOver>업로드!</DragOver>}\r\n      </Container>\r\n    </Workspace>\r\n  );\r\n};\r\n\r\nexport default Channel;\r\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Header","_templateObject2","DragOver","_templateObject3","_chatData$","_chatData","_useParams","useParams","workspace","channel","myData","useSWR","fetcher","data","_useInput2","_slicedToArray","useInput","chat","onChangeChat","setChat","channelData","concat","_useSWRInfinite","useSWRInfinite","index","chatData","mutateChat","mutate","setSize","channelMembersData","socket","useSocket","isReachingEnd","length","scrollbarRef","useRef","_useState2","useState","showInviteChannelModal","setShowInviteChannelModal","_useState4","dragOver","setDragOver","onSubmitForm","useCallback","e","preventDefault","console","log","trim","savedChat","prevChatData","_chatData$0$","unshift","id","content","UserId","User","ChannelId","Channel","createdAt","Date","then","_scrollbarRef$current","current","scrollToBottom","axios","catch","error","onMessage","name","startsWith","_scrollbarRef$current2","getScrollHeight","getClientHeight","getScrollTop","getValues","setTimeout","_scrollbarRef$current3","useEffect","on","off","_scrollbarRef$current4","onClickInviteChannel","onCloseModal","onDrop","formData","FormData","target","files","i","file","getAsFile","append","dataTransfer","items","kind","onDragOver","chatSections","makeSection","flat","reverse","React","Workspace","className","onClick","type","ChatList","ref","ChatBox","InviteChannelModal","show"],"sourceRoot":""}